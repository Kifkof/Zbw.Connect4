@using global::Game.Contract.Queries.Dtos
<MudPaper Height="70vh" Class="d-flex justify-content-center" Style="position: relative;">
    <div class="board">
        @foreach (var row in this.BoardState.BoardState)
        {
            int columnIndex = 0;
            @foreach (var cell in row)
            {

                @* TODO Reihe Hover Effekt *@
                var localColumnIndex = columnIndex;
                <div class="cell-container" @onclick="() => CellClickedAsync(localColumnIndex)">
                    <div class="hole">
                        <div class="game-piece @(cell.SlotState.ToString().ToLower()) @(cell.SlotState == SlotState.Empty ? "empty" : "filled")"></div>
                    </div>
                </div>

                columnIndex++;
            }

            <div style="flex-basis: 100%; height: 0;"></div>
        }

    </div>
    <MudOverlay Visible="this.IsBoardReadOnly" DarkBackground="true" AutoClose="false" Absolute="true"></MudOverlay>
</MudPaper>

@if (this.PlayPlaceSound)
{
    <audio autoplay hidden><source src="_content/Connect4.Frontend/sounds/stoneblockdragwoodgrind.mp3" /></audio>
}
else
{
    <audio hidden><source src="_content/Connect4.Frontend/sounds/stoneblockdragwoodgrind.mp3" /></audio>
}

<style>
    .cell-container {
        flex: 0 1 13.7%;
        aspect-ratio: 1 / 1;
        background: #b1a8a8;
    }

    .hole {
        background: #3e3e3e;
        aspect-ratio: 1 / 1;
        border-radius: 50%;
        position: relative;
    }

    .hovered {
        background: #5f5f5f;
    }

    .empty {
        opacity: 0;
        transform: translateY(-1000px);
        transition: all 0.8s ease-out;
    }

    .filled {
        opacity: 1;
        transform: translateY(0);
        transition: all 0.8s ease-out;
    }

    .yellow {
        background-image: radial-gradient(circle, rgb(242, 238, 13), #d17913 90%);
    }

    .red {
        background-image: radial-gradient(circle, rgb(241, 14, 14), #970e0e 90%);
    }

    .game-piece {
        aspect-ratio: 1 / 1;
        border-radius: 50%;
        position: absolute;
        top: 5%;
        left: 5%;
        width: 90%;
        height: 90%;
        overflow: visible;
    }

    .board {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        align-content: center;
        gap: 2px;
        aspect-ratio: 7 / 6;
        max-height: 70vh;
        background: #b1a8a8;
    }

    .player.active-red {
        box-shadow: 0px 0px 5px 3px rgba(241, 14, 14,0.5);
    }

    .player.active-yellow {
        box-shadow: 0px 0px 5px 3px rgba(242, 238, 13,0.5);
    }
</style>